#!/bin/bash

cleanup() {
	echo "Cleaning up servers"
	rm "$servers"
	echo "Cleaning up fifos"
	rm "$fifodir/*"
}

usage() {
	echo "slb v0.1.0: A load balancer written in shell script for development purposes."
	echo ""
	echo "Usage: slb [options] [command]"
	echo ""
	echo "Options:"
	echo "  -v		verbose output"
	echo "  -h		show this help"
	echo "  --help		show this help"
	echo "  --version	show version info"
	echo ""
	echo "Commands:"
	echo "  send		runs the send email interface, default"
	echo "  config		runs the configuration script, also on first run"
	echo "  help		show this help"
	echo ""
	echo "Examples:"
	echo "  smail config	Run the configuration script"
	echo "  smail		Send an email"
	echo ""
	#echo "Report bugs to: bleemayer@gmail.com"
	#echo "Home page: <https://www.github.com/nagoya-foundation/slb/>"
	#echo "General help: <https://www.github.com/nagoya-foundation/slb/wiki>"
}

show_version() {
	echo "slb 0.1.0"
	echo "Copyright (C) 2020 Nagoya Foundation."
	echo "License MIT: MIT License <https://opensource.org/licenses/MIT>"
	echo "THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,"
	echo "EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF"
	echo "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT."
	echo ""
	echo "Written by Nagoya Foundation."
}

read_opts() {
	while [ -n "$1" ]
	do
		case $1 in
			"-v")
				debug="-debug"
				;;
			"-h" | "help" | "--help")
				usage
				exit 0
				;;
			"--version")
				show_version
				exit 0
				;;
			"-p")
				shift
				listenport="$1"
				;;
			"-c")
				shift
				cert="$1"
				;;
			"-k")
				shift
				key="$1"
				;;
			"")
				echo break
				break
				;;
			*)
				echo "Adding $1"
				echo "$1" >> "$servers" &
				;;
		esac
		shift
	done
}

use_server() {
	echo "Using $1:$2"
	mkfifo -m 0600 "$fifodir/$1-$2"
	nc -l "$listenport" < "$fifodir/$1-$2" | nc "$1" "$2" > "$fifodir/$1-$2"
	rm "$fifodir/$1-$2"
	
	echo "Done with $1:$2"
	echo "$1:$2" >> "$servers" &
	echo "Added $1:$2 back"	
}

trap "cleanup; exit" EXIT INT HUP

# Defaults
listenport=4433

cachedir=${XDG_CACHE_HOME:-$HOME/.cache}
mkdir -p "$cachedir/slb"
servers="$cachedir/slb/servers"
mkfifo "$servers"

fifodir="$cachedir/slb/fifo"
mkdir -p "$fifodir"

read_opts "$@"

# Open TLS port with openssl
#openssl s_server $debug -accept "$port" -key "$key" -cert "$cert"
echo "slb listenning on port $listenport"
while :
do
	IFS=':' read -r server port < "$servers"
	echo "Selected $server:$port"

	(use_server "$server" "$port")
done

